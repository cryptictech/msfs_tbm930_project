<Macro Name="LightDimmingScale">(B:LIGHTING_Dimmer_light, Bool) if{ 0.15 } els{ 1 }</Macro>
<Macro Name="MinEmissivePercent">0.02</Macro>
<Macro Name="MaxEmissivePercent">1</Macro>
<Macro Name="PanelMaxEmissivePercent">1</Macro>
<Macro Name="ScreenEmissiveCode">
  (L:XMLVAR_AS3000_DisplayLightingBool, bool) if{
    (L:XMLVAR_AS3000_DisplayLighting, Percent over 100) @LightDimmingScale * @MaxEmissivePercent @MinEmissivePercent - * @MinEmissivePercent +
  } els{
    (L:AS3000_Brightness, Percent over 100) @LightDimmingScale * @MaxEmissivePercent @MinEmissivePercent - * @MinEmissivePercent +
  }
</Macro>
<Macro Name="ScreenStaticEmissiveCode">
  (L:XMLVAR_AS3000_DisplayLightingBool, bool) if{
    (L:XMLVAR_AS3000_DisplayLighting, Percent over 100) @LightDimmingScale * @MaxEmissivePercent @MinEmissivePercent - * @MinEmissivePercent +
  } els{
    (L:AS3000_Brightness, Percent over 100) @LightDimmingScale * @MaxEmissivePercent @MinEmissivePercent - * @MinEmissivePercent +
  }
</Macro>
<Macro Name="PanelEmissiveCode">
  (A:LIGHT POTENTIOMETER:4, Percent over 100) @LightDimmingScale * @PanelMaxEmissivePercent @MinEmissivePercent - * @MinEmissivePercent +
</Macro>
<Macro Name="PanelStaticEmissiveCode">
  (A:LIGHT POTENTIOMETER:1, Percent over 100) @LightDimmingScale * @PanelMaxEmissivePercent @MinEmissivePercent - * @MinEmissivePercent +
</Macro>

<Template Name = "FX_HEAT">
  <Parameters Type="Default">
    <FX_CONTACT_POINT_ID>-1</FX_CONTACT_POINT_ID>
    <FX_NODE>__NO_NODE__</FX_NODE>
  </Parameters>
  <Component ID="FX_HEAT" Node="#FX_NODE#">
    <UseTemplate Name="ASOBO_GT_FX">
    </UseTemplate>
  </Component>
</Template>

<Template Name="ASOBO_AS3000_TSC_Screen_Template">
  <Parameters Type="Default">
    <STATIC_SCREEN_EMISSIVE_VALUE>0.5</STATIC_SCREEN_EMISSIVE_VALUE>
  </Parameters>
  <UseTemplate Name="ASOBO_AS3000_Screen_Template">
    <DISPLAY>TSC</DISPLAY>
    <Condition Valid="USE_STATIC_SCREEN_EMISSIVE">
      <SCREEN_EMISSIVE_CODE>@ScreenEmissiveCode</SCREEN_EMISSIVE_CODE>
    </Condition>
  </UseTemplate>
</Template>

<Template Name="ASOBO_AS3000_SubTemplate">
  <Parameters Type="Default">
    <AS3000>AS3000</AS3000>
    <Switch Param="DISPLAY">
      <Case Value="PFD">
        <Switch Param="ID">
          <Case Value="1">
            <DISPLAY_POS>L</DISPLAY_POS>
          </Case>
          <Case Value="2">
            <DISPLAY_POS>R</DISPLAY_POS>
          </Case>
        </Switch>
        <DISPLAY_ID>#DISPLAY#_#ID#</DISPLAY_ID>
      </Case>
      <Case Value="MFD">
        <DISPLAY_POS>M</DISPLAY_POS>
        <DISPLAY_ID>#DISPLAY#</DISPLAY_ID>
      </Case>
    </Switch>
    <USE_STATIC_SCREEN_EMISSIVE>True</USE_STATIC_SCREEN_EMISSIVE>
    <POTENTIOMETER>4</POTENTIOMETER>
    <STATIC_SCREEN_EMISSIVE_VALUE>0.5</STATIC_SCREEN_EMISSIVE_VALUE>
  </Parameters>
  <Parameters Type="Default">
    <SCREEN_NODE_ID>AS1000_#DISPLAY_ID#</SCREEN_NODE_ID>
  </Parameters>
  <Component ID="#AS3000#_Softkeys_#DISPLAY_ID#">
    <Parameters Type="Override">
      <EMISSIVE_CODE>@ScreenStaticEmissiveCode</EMISSIVE_CODE>
    </Parameters>
    <Loop>
      <Setup>
        <Param>KEY_ID</Param>
        <From>1</From>
        <Inc>1</Inc>
        <To>12</To>
      </Setup>
      <Do>
        <UseTemplate Name="ASOBO_AS3000_Softkey_Template"/>
      </Do>
    </Loop>
  </Component>
  <UseTemplate Name="ASOBO_AS3000_Screen_Template">
    <SCREEN_EMISSIVE_CODE>@ScreenEmissiveCode</SCREEN_EMISSIVE_CODE>
  </UseTemplate>
</Template>

<Template Name="TBM930_DragXAxis_Code">
  <DefaultTemplateParameters>
    <HELPID/>
    <TOOLTIPID/>
    <ANIM_LAG>0</ANIM_LAG>
    <Condition Check="IS_LOOPING">
      <ANIM_LENGTH>360</ANIM_LENGTH>
    </Condition>
    <ANIM_SCALE>1</ANIM_SCALE>
    <Condition Check="SINGLE_STEP">
      <ANIM_LAG>300</ANIM_LAG>
      <DRAG_DELTA>0.0001</DRAG_DELTA>
      <DRAG_SPEED>1</DRAG_SPEED>
      <ANIM_SCALE>100</ANIM_SCALE>
      <ANIM_LENGTH>100</ANIM_LENGTH>
      <MIN_LIMITER> 0 max </MIN_LIMITER>
      <MAX_LIMITER> 1 min </MAX_LIMITER>
    </Condition>
    <POSITION_TYPE>L</POSITION_TYPE>
    <POSITION_VAR>XMLVAR_SunVisorX_#ID#</POSITION_VAR>
  </DefaultTemplateParameters>
  <UseTemplate Name = "TBM930_DraggingXAxis_Code_Base">
  </UseTemplate>
</Template>

<Template Name="TBM930_DraggingXAxis_Code_Base">
  <DefaultTemplateParameters>
    <ANIM_CODE>(#POSITION_TYPE#:#POSITION_VAR#) #ANIM_SCALE# *</ANIM_CODE>
  </DefaultTemplateParameters>
  <UseTemplate Name = "ASOBO_GT_Anim_Code">
  </UseTemplate>
  <UseTemplate Name = "ASOBO_GT_AnimTriggers_2SoundEvents">
    <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
    <DIRECTION_1>Backward</DIRECTION_1>
    <NORMALIZED_TIME_2>0.9</NORMALIZED_TIME_2>
    <DIRECTION_2>Forward</DIRECTION_2>
  </UseTemplate>
  <UseTemplate Name = "ASOBO_GT_Interaction_DraggingXAxis_Code">
  </UseTemplate>
</Template>

<Template Name="TBM930_DragYAxis_Code">
  <DefaultTemplateParameters>
    <HELPID/>
    <TOOLTIPID/>
    <ANIM_LAG>0</ANIM_LAG>
    <Condition Check="IS_LOOPING">
      <ANIM_LENGTH>360</ANIM_LENGTH>
    </Condition>
    <ANIM_SCALE>1</ANIM_SCALE>
    <Condition Check="SINGLE_STEP">
      <ANIM_LAG>300</ANIM_LAG>
      <DRAG_DELTA>0.0001</DRAG_DELTA>
      <DRAG_SPEED>1</DRAG_SPEED>
      <ANIM_SCALE>100</ANIM_SCALE>
      <ANIM_LENGTH>100</ANIM_LENGTH>
      <MIN_LIMITER> 0 max </MIN_LIMITER>
      <MAX_LIMITER> 1 min </MAX_LIMITER>
    </Condition>
    <POSITION_TYPE>L</POSITION_TYPE>
    <POSITION_VAR>XMLVAR_SunVisorY_#ID#</POSITION_VAR>
  </DefaultTemplateParameters>
  <UseTemplate Name = "TBM930_DraggingYAxis_Code_Base">
  </UseTemplate>
</Template>

<Template Name="TBM930_DraggingYAxis_Code_Base">
  <DefaultTemplateParameters>
    <ANIM_CODE>(#POSITION_TYPE#:#POSITION_VAR#) #ANIM_SCALE# *</ANIM_CODE>
  </DefaultTemplateParameters>
  <UseTemplate Name = "ASOBO_GT_Anim_Code">
  </UseTemplate>
  <UseTemplate Name = "ASOBO_GT_AnimTriggers_2SoundEvents">
    <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
    <DIRECTION_1>Backward</DIRECTION_1>
    <NORMALIZED_TIME_2>0.9</NORMALIZED_TIME_2>
    <DIRECTION_2>Forward</DIRECTION_2>
  </UseTemplate>
  <UseTemplate Name = "ASOBO_GT_Interaction_DraggingYAxis_Code">
  </UseTemplate>
</Template>

<Template Name="TBM930_LIGHTING_Switches_Light_Pulse_Landing_Template">
  <DefaultTemplateParameters>
    <ID>1</ID>
    <TYPE>PULSE_LANDING</TYPE>
    <LIGHT_TYPE_PULSE>RECOGNITION</LIGHT_TYPE_PULSE>
  </DefaultTemplateParameters>
  <UseTemplate Name="TBM930_LIGHTING_Switches_Light_Pulse_Landing_SubTemplate">
  </UseTemplate>
</Template>

<Template Name="TBM930_LIGHTING_Switches_Light_Pulse_Landing_SubTemplate">
  <DefaultTemplateParameters>
    <Switch Param="TYPE">
      <Case Value="PULSE_LANDING">
        <LANDING_NODE_ID>LIGHTING_Switch_Light_Landing_#ID#</LANDING_NODE_ID>
        <LANDING_ANIM_NAME>LIGHTING_Switch_Light_Landing_#ID#</LANDING_ANIM_NAME>
        <PULSE_NODE_ID>LIGHTING_Switch_Light_Pulse</PULSE_NODE_ID>
        <PULSE_ANIM_NAME>LIGHTING_Switch_Light_Pulse</PULSE_ANIM_NAME>
        <ON_TOGGLE_LANDING/>
        <ON_TOGGLE_PULSE/>
      </Case>
      <Case Value="PULSE_LANDING_TAXI_OFF">
        <!-- Pulse only available in LANDING position -->
        <POS_LANDING>0</POS_LANDING>
        <POS_TAXI>1</POS_TAXI>
        <POS_OFF>2</POS_OFF>
        <ON_LANDING/>
        <ON_TAXI/>
        <ON_OFF/>
        <ON_TOGGLE_PULSE/>
        <IS_PULSE>(A:LIGHT #LIGHT_TYPE_PULSE#, Bool)</IS_PULSE>
        <IS_PULSE_SWITCH_ON>(I:XMLVAR_PULSE_Switch_ON)</IS_PULSE_SWITCH_ON>
        <SET_PULSE>(A:LIGHT #LIGHT_TYPE_PULSE#, Bool) != if{ (&gt;K:TOGGLE_#LIGHT_TYPE_PULSE#_LIGHTS) }</SET_PULSE>
        <SET_PULSE_SWITCH>(&gt;I:XMLVAR_PULSE_Switch_ON)</SET_PULSE_SWITCH>
        <SET_LANDING>(A:LIGHT LANDING, Bool) != if{ (&gt;K:LANDING_LIGHTS_TOGGLE) }</SET_LANDING>
        <SET_TAXI>(A:LIGHT TAXI, Bool) != if{ (&gt;K:TOGGLE_TAXI_LIGHTS) }</SET_TAXI>
        <SET_LANDING_TAXI_OFF_SWITCH>(&gt;L:XMLVAR_LANDING_TAXI_OFF_Switch_Position)</SET_LANDING_TAXI_OFF_SWITCH>
        <GET_LANDING_TAXI_OFF_SWITCH>(L:XMLVAR_LANDING_TAXI_OFF_Switch_Position)</GET_LANDING_TAXI_OFF_SWITCH>
        <ANIMTIP_0_LANDING_TAXI_OFF></ANIMTIP_0_LANDING_TAXI_OFF>
        <ANIMTIP_1_LANDING_TAXI_OFF></ANIMTIP_1_LANDING_TAXI_OFF>
        <ANIMTIP_2_LANDING_TAXI_OFF></ANIMTIP_2_LANDING_TAXI_OFF>
        <WWISE_EVENT_LANDING_TAXI_OFF>button_switch_metal</WWISE_EVENT_LANDING_TAXI_OFF>
        <WWISE_EVENT_1_PULSE>pulse_light_switch_on</WWISE_EVENT_1_PULSE>
        <WWISE_EVENT_2_PULSE>pulse_light_switch_off</WWISE_EVENT_2_PULSE>
        <PART_ID_PULSE>LIGHTING_Switch_Pulse</PART_ID_PULSE>
        <PART_ID_LANDING_TAXI_OFF>LIGHTING_Switch_Landing_Taxi_Off</PART_ID_LANDING_TAXI_OFF>
        <ANIM_NAME_PULSE>LIGHTING_Switch_Pulse</ANIM_NAME_PULSE>
        <ANIM_NAME_LANDING_TAXI_OFF>LIGHTING_Switch_Landing_Taxi_Off</ANIM_NAME_LANDING_TAXI_OFF>
        <NODE_ID_PULSE>LIGHTING_Switch_Pulse</NODE_ID_PULSE>
        <NODE_ID_LANDING_TAXI_OFF>LIGHTING_Switch_Landing_Taxi_Off</NODE_ID_LANDING_TAXI_OFF>
      </Case>
    </Switch>
  </DefaultTemplateParameters>
  <OverrideTemplateParameters>
    <Switch Param="TYPE">
      <Case Value="PULSE_LANDING_TAXI_OFF">
        <CAN_PULSE>#GET_LANDING_TAXI_OFF_SWITCH# #POS_LANDING# !=</CAN_PULSE>
        <IS_LANDING>#GET_LANDING_TAXI_OFF_SWITCH# #POS_LANDING# ==</IS_LANDING>
        <IS_TAXI>#GET_LANDING_TAXI_OFF_SWITCH# #POS_TAXI# ==</IS_TAXI>
        <IS_OFF>#GET_LANDING_TAXI_OFF_SWITCH# #POS_OFF# ==</IS_OFF>
      </Case>
    </Switch>
  </OverrideTemplateParameters>
  <Switch Param="TYPE">
    <Case Value="PULSE_LANDING">
      <Component ID="LIGHTING_Switches_Light_Pulse_Landing_#ID#">
        <Update Once="True">
          (A:LIGHT LANDING, Bool) (&gt;I:XMLVAR_Light_Switch_Landing_ON)
          (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) (&gt;I:XMLVAR_Light_Switch_Pulse_ON)
          (I:XMLVAR_Light_Switch_Pulse_ON) if{
            (A:LIGHT LANDING, Bool) if{ (&gt;K:LANDING_LIGHTS_TOGGLE) }
            (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) ! if{ (&gt;K:TOGGLE_#LIGHT_TYPE_PULSE#_LIGHTS) }
          }
        </Update>
        <!-- ensure variables consistency -->
        <Update Frequency="2">
          (A:LIGHT LANDING, Bool) if{ 1 (&gt;I:XMLVAR_Light_Switch_Landing_ON) }
          (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) if{ 1 (&gt;I:XMLVAR_Light_Switch_Pulse_ON) }
          (A:LIGHT LANDING, Bool) (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) and if{
            (I:XMLVAR_Light_Switch_Pulse_ON) (I:XMLVAR_Light_Switch_Landing_ON) and if{
              (&gt;K:LANDING_LIGHTS_TOGGLE)
            } els{
              (&gt;K:TOGGLE_#LIGHT_TYPE_PULSE#_LIGHTS)
            }
          }
          (A:LIGHT LANDING, Bool) ! (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) ! and if{
            0 (&gt;I:XMLVAR_Light_Switch_Landing_ON)
          }
        </Update>
        <Component ID="#PULSE_NODE_ID#_#ID#" Node="#PULSE_NODE_ID#">
          <UseTemplate Name="ASOBO_GT_Toggle_Variable_Anim">
            <Condition Valid="INVERT_ANIM_PULSE">
              <INVERT_ANIM>True</INVERT_ANIM>
            </Condition>
            <VAR_NAME>XMLVAR_Light_Switch_Pulse_ON</VAR_NAME>
            <VAR_SCOPE>I</VAR_SCOPE>
            <ANIM_CODE>(I:XMLVAR_Light_Switch_Pulse_ON) (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) or 100 *</ANIM_CODE>
            <ANIM_NAME>#PULSE_ANIM_NAME#</ANIM_NAME>
            <TOGGLE_CODE>
              (I:XMLVAR_Light_Switch_Pulse_ON) if{
                (I:XMLVAR_Light_Switch_Landing_ON) if{
                  (A:LIGHT LANDING, Bool) if{ (&gt;K:LANDING_LIGHTS_TOGGLE) }
                  (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) ! if{ (&gt;K:TOGGLE_#LIGHT_TYPE_PULSE#_LIGHTS) }
                }
              } els{
                (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) if{ (&gt;K:TOGGLE_#LIGHT_TYPE_PULSE#_LIGHTS) }
                (A:LIGHT LANDING, Bool) ! (I:XMLVAR_Light_Switch_Landing_ON) and if{ (&gt;K:LANDING_LIGHTS_TOGGLE) }
              }
              #ON_TOGGLE_PULSE#
            </TOGGLE_CODE>
            <WWISE_EVENT>recognition_light_switch</WWISE_EVENT>
            <WWISE_EVENT_1>pulse_light_switch_on</WWISE_EVENT_1>
            <WWISE_EVENT_2>pulse_light_switch_off</WWISE_EVENT_2>
            <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.STBY_STROBE_LIGHT_OFF</ANIMTIP_0>
            <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.STBY_STROBE_LIGHT_ON</ANIMTIP_1>
          </UseTemplate>
        </Component>
        <Component ID="#LANDING_NODE_ID#" Node="#LANDING_NODE_ID#">
          <UseTemplate Name="ASOBO_GT_Toggle_Variable_Anim">
            <VAR_NAME>XMLVAR_Light_Switch_Landing_ON</VAR_NAME>
            <VAR_SCOPE>I</VAR_SCOPE>
            <ANIM_CODE>(I:XMLVAR_Light_Switch_Landing_ON) (A:LIGHT LANDING, Bool) or 100 *</ANIM_CODE>
            <ANIM_NAME>#LANDING_ANIM_NAME#</ANIM_NAME>
            <TOGGLE_CODE>
              (I:XMLVAR_Light_Switch_Landing_ON) if{
                (I:XMLVAR_Light_Switch_Pulse_ON) if{
                  (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) ! if{ (&gt;K:TOGGLE_#LIGHT_TYPE_PULSE#_LIGHTS) }
                } els{
                  (A:LIGHT LANDING, Bool) ! if{ (&gt;K:LANDING_LIGHTS_TOGGLE) }
                  (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) if{ (&gt;K:TOGGLE_#LIGHT_TYPE_PULSE#_LIGHTS) }
                }
              } els{
                (A:LIGHT #LIGHT_TYPE_PULSE#, Bool) if{ (&gt;K:TOGGLE_#LIGHT_TYPE_PULSE#_LIGHTS) }
                (A:LIGHT LANDING, Bool) if{ (&gt;K:LANDING_LIGHTS_TOGGLE) }
              }
              #ON_TOGGLE_LANDING#
            </TOGGLE_CODE>
            <WWISE_EVENT>landing_light_switch</WWISE_EVENT>
            <WWISE_EVENT_1>landing_light_switch_on</WWISE_EVENT_1>
            <WWISE_EVENT_2>landing_light_switch_off</WWISE_EVENT_2>
            <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.LANDING_LIGHT_OFF</ANIMTIP_0>
            <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.LANDING_LIGHT_ON</ANIMTIP_1>
          </UseTemplate>
        </Component>
      </Component>
    </Case>
    <Case Value="PULSE_LANDING_TAXI_OFF">
      <Component ID="#NODE_ID_PULSE#" Node="#NODE_ID_PULSE#">
        <OverrideTemplateParameters>
          <ON_TOGGLE_PULSE>
            #IS_PULSE_SWITCH_ON# #CAN_PULSE# and #SET_PULSE#
            #IS_PULSE# if{
              0 #SET_LANDING#
              0 #SET_TAXI#
            } els{
              #IS_LANDING# #SET_LANDING#
              #IS_TAXI# #SET_TAXI#
            }
            #ON_TOGGLE_PULSE#
          </ON_TOGGLE_PULSE>
          <IS_PULSE_FORCED_FROM_FLT>(L:XMLVAR_FORCE_PULSE_ON)</IS_PULSE_FORCED_FROM_FLT>
        </OverrideTemplateParameters>
        <!-- Init switch correctly from sim -->
        <UseTemplate Name="ASOBO_GT_Update">
          <UPDATE_ONCE>True</UPDATE_ONCE>
          <UPDATE_CODE>
            1 0 #IS_PULSE_FORCED_FROM_FLT# ? #SET_PULSE#
            #IS_PULSE# #SET_PULSE_SWITCH#
          </UPDATE_CODE>
        </UseTemplate>
        <!-- Ensure switch state consistency -->
        <UseTemplate Name="ASOBO_GT_Update">
          <FREQUENCY>2</FREQUENCY>
          <UPDATE_CODE>
            #IS_PULSE_SWITCH_ON# #CAN_PULSE# and #SET_PULSE#
          </UPDATE_CODE>
        </UseTemplate>
        <UseTemplate Name="ASOBO_GT_Toggle_Variable_Anim">
          <PART_ID>#PART_ID_PULSE#</PART_ID>
          <Condition Valid="INVERT_ANIM_PULSE">
            <INVERT_ANIM>True</INVERT_ANIM>
          </Condition>
          <VAR_NAME>XMLVAR_PULSE_Switch_ON</VAR_NAME>
          <VAR_SCOPE>I</VAR_SCOPE>
          <ANIM_NAME>#ANIM_NAME_PULSE#</ANIM_NAME>
          <TOGGLE_CODE>
            #ON_TOGGLE_PULSE#
          </TOGGLE_CODE>
          <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.PULSE_LIGHT_OFF</ANIMTIP_0>
          <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.PULSE_LIGHT_ON</ANIMTIP_1>
          <WWISE_EVENT_1>#WWISE_EVENT_1_PULSE#</WWISE_EVENT_1>
          <WWISE_EVENT_2>#WWISE_EVENT_2_PULSE#</WWISE_EVENT_2>
        </UseTemplate>
      </Component>
      <Component ID="#NODE_ID_LANDING_TAXI_OFF#" Node="#NODE_ID_LANDING_TAXI_OFF#">
        <OverrideTemplateParameters>
          <ON_LANDING>
            1 #SET_LANDING#
            0 #SET_PULSE#
            0 #SET_TAXI#
            #POS_LANDING# #SET_LANDING_TAXI_OFF_SWITCH#
            #ON_LANDING#
          </ON_LANDING>
          <ON_TAXI>
            #IS_PULSE_SWITCH_ON# #SET_PULSE#
            0 #SET_LANDING#
            #IS_PULSE_SWITCH_ON# ! #SET_TAXI#
            #POS_TAXI# #SET_LANDING_TAXI_OFF_SWITCH#
            #ON_TAXI#
          </ON_TAXI>
          <ON_OFF>
            0 #SET_PULSE#
            0 #SET_LANDING#
            0 #SET_TAXI#
            #POS_OFF# #SET_LANDING_TAXI_OFF_SWITCH#
            #ON_OFF#
          </ON_OFF>
          <INIT_VARS>
            (A:LIGHT LANDING, Bool) ! (A:LIGHT TAXI, Bool) ! and #IS_PULSE# ! and #IS_LANDING# #IS_TAXI# or and if{
              #POS_OFF# #SET_LANDING_TAXI_OFF_SWITCH#
            } els{
              #IS_TAXI# if{
                (A:LIGHT LANDING, Bool) if{
                  0 #SET_PULSE#
                  0 #SET_TAXI#
                  #POS_LANDING# #SET_LANDING_TAXI_OFF_SWITCH#
                }
              } els{
                #IS_OFF# if{
                  (A:LIGHT LANDING, Bool) (A:LIGHT TAXI, Bool) or if{
                    (A:LIGHT LANDING, Bool) #SET_LANDING#
                    #IS_LANDING# ! #SET_TAXI#
                    #POS_LANDING# #POS_TAXI# #IS_LANDING# ? #SET_LANDING_TAXI_OFF_SWITCH#
                  }
                }
              }
            }
            #IS_PULSE_SWITCH_ON# #CAN_PULSE# and if{
              0 #SET_LANDING#
              0 #SET_TAXI#
            }
          </INIT_VARS>
        </OverrideTemplateParameters>
        <!-- Init switch correctly from sim -->
        <UseTemplate Name="ASOBO_GT_Update">
          <UPDATE_ONCE>True</UPDATE_ONCE>
          <UPDATE_CODE>
            (A:LIGHT LANDING, Bool) if{
              #POS_LANDING# #SET_LANDING_TAXI_OFF_SWITCH#
            } els{
              (A:LIGHT TAXI, Bool) if{
                #POS_TAXI# #SET_LANDING_TAXI_OFF_SWITCH#
              } els{
                #POS_OFF# #SET_LANDING_TAXI_OFF_SWITCH#
              }
            }
            #IS_LANDING# #SET_LANDING#
            #IS_TAXI# #SET_TAXI#
          </UPDATE_CODE>
        </UseTemplate>
        <UseTemplate Name="ASOBO_GT_Switch_3States">
          <SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
          <SWITCH_POSITION_VAR>XMLVAR_LANDING_TAXI_OFF_Switch_Position</SWITCH_POSITION_VAR>
          <PART_ID>#PART_ID_LANDING_TAXI_OFF#</PART_ID>
          <ANIM_NAME>#ANIM_NAME_LANDING_TAXI_OFF#</ANIM_NAME>
          <CODE_POS_#POS_LANDING#>
            #ON_LANDING#
          </CODE_POS_#POS_LANDING#>
          <CODE_POS_#POS_TAXI#>
            #ON_TAXI#
          </CODE_POS_#POS_TAXI#>
          <CODE_POS_#POS_OFF#>
            #ON_OFF#
          </CODE_POS_#POS_OFF#>
          <STATE#POS_LANDING#_TEST>#IS_LANDING#</STATE#POS_LANDING#_TEST>
          <STATE#POS_TAXI#_TEST>#IS_TAXI#</STATE#POS_TAXI#_TEST>
          <STATE#POS_OFF#_TEST>#IS_OFF#</STATE#POS_OFF#_TEST>
          <WWISE_EVENT>#WWISE_EVENT_LANDING_TAXI_OFF#</WWISE_EVENT>
          <ANIMTIP_0>#ANIMTIP_0_LANDING_TAXI_OFF#</ANIMTIP_0>
          <ANIMTIP_1>#ANIMTIP_1_LANDING_TAXI_OFF#</ANIMTIP_1>
          <ANIMTIP_2>#ANIMTIP_2_LANDING_TAXI_OFF#</ANIMTIP_2>
        </UseTemplate>
      </Component>
    </Case>
  </Switch>
</Template>